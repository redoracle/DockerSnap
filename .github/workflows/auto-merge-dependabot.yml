name: Auto-Merge Dependabot PRs with High Compatibility

on:
  pull_request:
    types: [opened, labeled, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: |
      github.actor == 'dependabot[bot]' || 'dependabot' || github.actor == 'dependabot-preview[bot]'

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Determine Compatibility Score
      - name: Get Compatibility Score
        id: compatibility
        run: |
          # Extract the compatibility score from labels
          COMPATIBILITY_LABEL=$(jq --raw-output '.pull_request.labels[]? | select(.name != null) | select(.name | startswith("compatibility:")) | .name' "$GITHUB_EVENT_PATH")
          
          if [ -z "$COMPATIBILITY_LABEL" ]; then
            echo "compatibility=0" >> $GITHUB_ENV
            echo "No compatibility label found. Setting compatibility to 0%."
          else
            # Extract numeric value
            SCORE=$(echo "$COMPATIBILITY_LABEL" | grep -oP '\d+')
            echo "compatibility=$SCORE" >> $GITHUB_ENV
            echo "Detected compatibility score: $SCORE%"
          fi

      # Step 3: Check Compatibility Threshold
      - name: Check Compatibility Threshold
        run: |
          if [ -n "$compatibility" ] && [ "$compatibility" -ge 90 ]; then
            echo "ready_to_merge=true" >> $GITHUB_ENV
            echo "Compatibility threshold met."
          else
            echo "ready_to_merge=false" >> $GITHUB_ENV
            echo "Compatibility threshold not met."
          fi

      - name: Print event.json
        run: cat "$GITHUB_EVENT_PATH"

      # Step 4: Merge PR if Compatible
      - name: Merge PR
        if: env.ready_to_merge == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: 'squash',
              commit_title: 'Automatically merged by GitHub Actions based on compatibility score.',
              commit_message: ''
            });

      # Step 5: Add Merge Comment
      - name: Add Merge Comment
        if: env.ready_to_merge == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: 'ðŸŽ‰ This Dependabot PR has been automatically merged as it meets the compatibility threshold of 90% or higher.'
            });

      # Step 6: Add Summary Details
      - name: Add Summary Details
        if: always()
        run: |
          echo "## Summary Details" >> "$GITHUB_STEP_SUMMARY"
          echo "* PR Number: #${{ github.event.pull_request.number }}" >> "$GITHUB_STEP_SUMMARY"
          echo "* Compatibility Score: ${{ env.compatibility }}%" >> "$GITHUB_STEP_SUMMARY"
          if [ "$ready_to_merge" == "true" ]; then
            echo "* Action: PR merged automatically." >> "$GITHUB_STEP_SUMMARY"
          else
            echo "* Action: PR not merged. Compatibility below threshold." >> "$GITHUB_STEP_SUMMARY"
          fi
